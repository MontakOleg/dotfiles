#!/usr/bin/env bash

#
# Modified script from https://github.com/tj/git-extras/blob/master/bin/git-pull-request
#  - use auth_token instead password
#  - use last commit message as default PR title
#  - PR body and Github 2FA fields disabled
#  - default branch in variable
#

#
# Echo <msg> and exit
#

abort() {
  echo >&2 "$@"
  exit 1
}

#
# Produce json with <title>, <body>, <head> and <base>
#

json() {
  local title="${1//\"/\\\"}"
  local body="${2//\"/\\\"}"
  local head="${3//\"/\\\"}"
  local base="${4//\"/\\\"}"
  cat <<EOF
{
  "title": "$title",
  "body": "$body",
  "head": "$head",
  "base": "$base"
}
EOF
}

# default base branch

default_base_branch="develop"

# auth token

auth_token=$(cat ~/.github_keys/private_token 2>/dev/null)

test -z "$auth_token" && abort "create token at https://github.com/settings/tokens and put it to ~/.github_keys/private_token"

# last commit message

last_commit_message=$(git log -n 1 --pretty=format:%s)

# branch

branch=${1-$(git symbolic-ref HEAD | sed 's/refs\/heads\///')}
remote=$(git config branch."$branch".remote)
if [ -z "$remote" ]; then
    echo 'no upstream found, push to origin as default'
    remote="origin"
fi
[ "$remote" == "." ] && abort "the upstream should be a remote branch."

# make sure it's pushed

git push "$remote" "$branch" || abort "failed to push $branch"

remote_url=$(git config remote."$remote".url)
if [[ "$remote_url" == git@* ]]; then
    project=${remote_url##*:}
else
    project=${remote_url#https://*/}
fi
project=${project%.git}

# prompt

echo
echo "  create pull-request for $project '$branch'"
echo
printf "  title: " && read -r title
#printf "  body: " && read -r body
printf "  base [$default_base_branch]: " && read -r base
#printf "  GitHub two-factor authentication code (leave blank if not set up): " && read -r mfa_code
echo

# create pull request

if [ -z "$title" ]
then
    title=$last_commit_message
fi

if [ -z "$base" ]
then
    base=$default_base_branch
fi

body=$(json "$title" "$body" "$branch" "$base")

curl -H "X-GitHub-OTP: $mfa_code" \
    -H "Authorization: token $auth_token" \
    "https://api.github.com/repos/$project/pulls" -d "$body"

